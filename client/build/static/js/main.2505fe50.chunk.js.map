{"version":3,"sources":["components/Main.jsx","components/NewPet.jsx","components/EditPet.jsx","components/PetInfo.jsx","App.js","serviceWorker.js","index.js"],"names":["Main","props","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","className","style","padding","to","type","class","map","s","key","_id","name","NewPet","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","like","errors","setErrors","onSubmit","e","preventDefault","Pet","post","navigate","placeholder","onChange","target","value","message","width","EditPet","setLike","pet","put","PetInfo","display","verticalAlign","paddingLeft","paddingTop","onClick","delete","marginRight","thumbup","marginTop","App","textDecoration","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2505fe50.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Main = props => {\r\n    const [pets, setPets] = useState([]);\r\n    const fetchActivities = () =>{\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => setPets(res.data))\r\n            .catch(err =>console.log(err));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchActivities();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"columns\" style={{padding:\"40px\"}}>\r\n        <div className=\"column\">\r\n            <Link to=\"/new\" className=\"subtitle\"><button type=\"button\" class=\"btn btn-primary\">Add a pet to the Shelter!</button></Link>\r\n            <div class=\"table-container\">\r\n                <table class=\"table table-hover\">\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {\r\n                        pets.map(s =>\r\n                        <tr class=\"table-info\" key = {s._id}>\r\n                            <td>{s.name}</td>\r\n                            <td>{s.type}</td>\r\n                            <td><Link to={\"/info/\"+s._id}>Details</Link>\r\n                            &nbsp;|&nbsp;\r\n                            <Link to={\"/edit/\"+s._id}>Edit</Link></td>\r\n                        </tr>   \r\n                            \r\n                        )\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n    export default Main;","import React, { useState } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst NewPet = props => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [like, setLike]  = useState(0);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const addPet = e => {\r\n        e.preventDefault();\r\n        const Pet = {name,type,description,skill1,skill2,skill3,like};\r\n        axios.post(\"http://localhost:8000/api/pets\", Pet)\r\n            .then(res =>{\r\n                if(res.data.errors){\r\n                    setErrors(res.data.errors);\r\n                }\r\n                else{\r\n                    navigate(\"/\");\r\n                }\r\n                console.log(res)})\r\n            .catch( err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <fieldset>\r\n            <h1>Know a pet needing a home?</h1>\r\n            <div className=\"message-header\">\r\n            </div>\r\n            <div class=\"row justify-content-center\">\r\n                <form class=\"col-md-2\" onSubmit = { addPet }> \r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Name\" onChange={e=> setName(e.target.value)}/>\r\n                    {\r\n                        errors.name ? <p class=\"text-primary\">{errors.name.message}</p> : true \r\n                    }\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Type\" onChange={e=> setType(e.target.value)}/>\r\n                    {\r\n                        errors.type ? <p class=\"text-primary\">{errors.type.message}</p> : true \r\n                    }\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Description\" onChange={e=> setDescription(e.target.value)}/>\r\n                    {\r\n                        errors.description ? <p class=\"text-primary\">{errors.description.message}</p> : true \r\n                    }\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Skill 1\" onChange={e=> setSkill1(e.target.value)}/>\r\n\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Skill 2\" onChange={e=> setSkill2(e.target.value)}/>\r\n                        \r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Skill 3\" onChange={e=> setSkill3(e.target.value)}/>\r\n                        \r\n                    </div>\r\n                    <button type=\"submit\" style={{width:\"100%\"}} className=\"btn btn-success\">Add Pet</button>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default NewPet;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst EditPet = props => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [like, setLike]  = useState(0);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getPet = () => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then( res => {\r\n                console.log(res.data)\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n                setLike(res.data.like);\r\n            })\r\n            .catch( err => console.log(err));\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getPet();\r\n    },[]);\r\n\r\n    const editPet = e => {\r\n        e.preventDefault();\r\n        const pet = {name,type,description,skill1,skill2,skill3,like};\r\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, pet)\r\n            .then(res =>{\r\n                if(res.data.errors){\r\n                    setErrors(res.data.errors);\r\n                }\r\n                else{\r\n                    navigate(\"/\");\r\n                }\r\n                console.log(res)})\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <fieldset>\r\n            <h1 className=\"title\">Edit Pet</h1>\r\n            <div className=\"message-header\">\r\n                <p>Update Pet Info</p>\r\n            </div>\r\n            <div class=\"row justify-content-center\">\r\n                <form class=\"col-md-2\" onSubmit = { editPet }> \r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Name\" onChange={e=> setName(e.target.value)} value={name}/>\r\n                    {\r\n                        errors.name ? <p class=\"help is-danger\">{errors.name.message}</p> : true \r\n                    }\r\n\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Type\" onChange={e=> setType(e.target.value)} value={type} />\r\n                    {\r\n                        errors.type ? <p class=\"text-primary\">{errors.type.message}</p> : true \r\n                    }\r\n                        \r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Description\" onChange={e=> setDescription(e.target.value)} value={description} />\r\n                    {\r\n                        errors.description ? <p class=\"text-primary\">{errors.description.message}</p> : true \r\n                    }\r\n                        \r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Skill 1\" onChange={e=> setSkill1(e.target.value)} value={skill1} />\r\n                        \r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Skill 2\" onChange={e=> setSkill2(e.target.value)} value={skill2} />\r\n                        \r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Skill 3\" onChange={e=> setSkill3(e.target.value)} value={skill3} />\r\n                        \r\n                    </div>\r\n                    <button type=\"submit\" style={{width:\"100%\"}} className=\"btn btn-success\">Update!</button>\r\n                </form>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default EditPet;","import React, { useState, useEffect } from 'react';\r\nimport { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst PetInfo = props => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [like, setLike] = useState(0);\r\n\r\n    const getPet = () => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n                setLike(res.data.like);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPet();\r\n    }, []);\r\n\r\n    const remove = _id => {\r\n        axios.delete(`http://localhost:8000/api/pets/${_id}`)\r\n            .then(res => {\r\n                navigate(\"/\")\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const thumbup = e => {\r\n        setLike(like + 1)\r\n        const pet = { name, type, description, skill1, skill2, skill3, like };\r\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, pet)\r\n            .then(res => {\r\n                console.log(res.data);\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <fieldset>\r\n            <h1 className=\"title\">Deatils about: {name}</h1>\r\n            <div className=\"message-body\">\r\n                <div style={{ display: \"inline-block\", verticalAlign: \"top\" }}>\r\n                    <h6>Pet Type:</h6>\r\n                    <h6>Descrption:</h6>\r\n                    <h6>Skills:</h6>\r\n                </div>\r\n                <div style={{ display: \"inline-block\", paddingLeft: \"40px\" }}>\r\n                    <h6 class=\"text-success\">{type}</h6>\r\n                    <h6 class=\"text-success\">{description}</h6>\r\n                    <div>\r\n                        <h6 class=\"text-success\">{skill1}</h6>\r\n                        <h6 class=\"text-success\">{skill2}</h6>\r\n                        <h6 class=\"text-success\">{skill3}</h6>\r\n                    </div>\r\n                </div>\r\n                <div style={{ paddingTop: \"20px\" }}>\r\n                    <button onClick={e => remove(props._id)} style={{ marginRight: \"20px\" }} className=\"btn btn-outline-success\">Adopt {name}</button>\r\n                    <button style={{ marginRight: \"20px\" }} onClick={e => thumbup()} className=\"btn btn-outline-success\">Like {name}</button>\r\n                    <h6 class=\"text-success\" style={{ display: \"inline-block\", marginTop: \"7px\" }}>{like} like(s)</h6>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default PetInfo;","import React from 'react';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport './App.css';\nimport { Router, Link } from '@reach/router';\nimport Main from './components/Main';\nimport NewPet from './components/NewPet';\nimport EditPet from './components/EditPet';\nimport PetInfo from './components/PetInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div class=\"jumbotron pt-0 pb-5 pl-5\">\n          <div className=\"container\" >\n            <Link to=\"/\"><h3><a style={{textDecoration:\"underline\"}} className=\"title\">Home</a></h3></Link>\n            <h2>Take a pet home!</h2>\n          </div>\n        </div>\n      <Router>\n        <Main path=\"/\"/>\n        <NewPet path=\"/new\" />\n        <EditPet path=\"/edit/:_id\" />\n        <PetInfo path=\"/info/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}